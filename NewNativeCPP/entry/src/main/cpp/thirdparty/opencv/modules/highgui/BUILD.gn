# Copyright (c) 2022 Shenzhen Kaihong Digital Industry Development Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# opencv highgui build

import("//build/ohos.gni")
import("//third_party/opencv/opencv_common_cfg.gni")
#import("//foundation/graphic/graphic/graphic_config.gni")

config("opencv_highgui_config") {
    cflags_cc = opencv_lib_common_cflags_cc
    defines = opencv_lib_common_defines
    defines += [
        "ENABLE_PLUGINS",
        "HAVE_WEBP",
    ]
}

ohos_source_set("opencv_highgui_source") {
    sources = [
        "//third_party/opencv/modules/highgui/src/backend.cpp",
        "//third_party/opencv/modules/highgui/src/window.cpp",
        "//third_party/opencv/modules/highgui/src/roiSelector.cpp",
        "//third_party/opencv/modules/highgui/src/precomp.hpp"
    ]
    include_dirs = [
        "//third_party/opencv/modules/highgui/include",
        "//third_party/opencv/modules/core/include",
        "//third_party/opencv/modules/imgproc/include",
        "//third_party/opencv/modules/videoio/include",
        "//third_party/opencv/modules/imgcodecs/include",
        "//third_party/opencv/build",
        "//third_party/opencv/build/opencv2",
        "//third_party/opencv/build/modules/highgui"
    ]

    deps = [  
        "//third_party/opencv/modules/core:libopencv_core",
        "//third_party/opencv/modules/imgproc:libopencv_imgproc",
        "//third_party/opencv/modules/imgcodecs:libopencv_imgcodecs",
        "//third_party/opencv/modules/videoio:libopencv_videoio",
        "//third_party/opencv/3rdparty/carotene:libtegra_hal",
    ]

    configs = [ ":opencv_highgui_config" ]
}

ohos_shared_library("libopencv_highgui") {
    deps = [ ":opencv_highgui_source" ]
    part_name = "opencv"
    subsystem_name = "thirdparty"
}

## Build bootanimation {{{
# config("window_ohos_config") {
#   visibility = [ ":*" ]

#   include_dirs = [
#     "include",
#     "src",
#     "//foundation/graphic/graphic/utils/log",
#     "//third_party/cJSON",
#     "//foundation/multimedia/media_standard/interfaces/inner_api/native",
#   ]

#   cflags = [
#     "-Wall",
#     "-Werror",
#     "-g3",
#     "-Wno-unused-private-field",
#   ]

#   defines = []
#   defines += gpu_defines
# }

# ohos_executable("window_ohos_test") {
#   install_enable = true

#   sources = [
#     "src/window_ohos_main.cpp",
#     "src/window_ohos_util.cpp",
#     "src/window_ohos.cpp",
#     "src/window_ohos.h",
#     "src/window_ohos_util.h",
#     "src/window_ohos_log.h",
#   ]

#   configs = [
#     ":window_ohos_config",
#     "//utils/native/base:utils_config",
#   ]

#   deps = [
#     "//base/global/resource_management/frameworks/resmgr:global_resmgr",
#     "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
#     "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
#     "//foundation/graphic/graphic:libsurface",
#     "//foundation/graphic/graphic:libvsync_client",
#     "//foundation/graphic/graphic:libwmclient",
#     "//foundation/graphic/graphic:libwmservice",
#     "//foundation/graphic/graphic/rosen/modules/2d_graphics:2d_graphics",
#     "//foundation/graphic/graphic/rosen/modules/render_service_base/src/platform:platform",
#     "//foundation/graphic/graphic/rosen/modules/render_service_client:librender_service_client",
#     "//foundation/multimedia/media_standard/interfaces/inner_api/native:media_client",
#     "//foundation/windowmanager/dm:libdm",
#     "//foundation/windowmanager/dmserver:libdms",
#     "//foundation/windowmanager/wm:libwm",
#     "//foundation/windowmanager/wmserver:libwms",
#     "//third_party/cJSON:cjson_static",
#     "//third_party/flutter/build/skia:ace_skia_ohos",
#     "//third_party/zlib:libz",
#   ]

#   external_deps = [
#     "hitrace_native:hitrace_meter",
#     "ipc:ipc_core",
#   ]

#   if (is_standard_system) {
#     external_deps += [ "startup_l2:syspara" ]
#   } else {
#     external_deps += [ "startup:syspara" ]
#   }
#     #relative_install_dir = "module"
#     part_name = "opencv"
#     subsystem_name = "thirdparty"
# }

