# Copyright (c) 2022 Shenzhen Kaihong Digital Industry Development Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# opencv photo build

import("//build/ohos.gni")
import("//third_party/opencv/opencv_common_cfg.gni")

config("opencv_photo_config") {
    cflags_cc = opencv_lib_common_cflags_cc
    defines = opencv_lib_common_defines
}

action("ocv_cl2cpp_photo") {
    script = "//third_party/opencv/build_cpp_from_cl.py"
    outputs = [
        "$target_out_dir/opencl_kernels_photo.cpp",
        "$target_out_dir/opencl_kernels_photo.hpp",
    ]
    cl_path = rebase_path("//third_party/opencv/modules/photo/src/opencl")
    save_path = rebase_path("$target_out_dir")
    module_name = "photo"
    args = [
        "--cl_path=$cl_path",
        "--save_path=$save_path",
        "--module_name=$module_name",
        "--target_cpu=$target_cpu",
    ]
    deps = ["//third_party/opencv/modules/core:libopencv_core",]
}

ohos_source_set("opencv_photo_source") {
    sources = [
        "//third_party/opencv/modules/photo/src/align.cpp",
        "//third_party/opencv/modules/photo/src/calibrate.cpp",
        "//third_party/opencv/modules/photo/src/contrast_preserve.cpp",
        "//third_party/opencv/modules/photo/src/denoise_tvl1.cpp",
        "//third_party/opencv/modules/photo/src/denoising.cpp",
        "//third_party/opencv/modules/photo/src/denoising.cuda.cpp",
        "//third_party/opencv/modules/photo/src/hdr_common.cpp",
        "//third_party/opencv/modules/photo/src/inpaint.cpp",
        "//third_party/opencv/modules/photo/src/merge.cpp",
        "//third_party/opencv/modules/photo/src/npr.cpp",
        "//third_party/opencv/modules/photo/src/seamless_cloning.cpp",
        "//third_party/opencv/modules/photo/src/seamless_cloning_impl.cpp",
        "//third_party/opencv/modules/photo/src/tonemap.cpp",
        "//third_party/opencv/modules/photo/src/arrays.hpp",
        "//third_party/opencv/modules/photo/src/contrast_preserve.hpp",
        "//third_party/opencv/modules/photo/src/fast_nlmeans_denoising_invoker.hpp",
        "//third_party/opencv/modules/photo/src/fast_nlmeans_denoising_invoker_commons.hpp",
        "//third_party/opencv/modules/photo/src/fast_nlmeans_denoising_opencl.hpp",
        "//third_party/opencv/modules/photo/src/fast_nlmeans_multi_denoising_invoker.hpp",
        "//third_party/opencv/modules/photo/src/hdr_common.hpp",
        "//third_party/opencv/modules/photo/src/npr.hpp",
        "//third_party/opencv/modules/photo/src/precomp.hpp",
        "//third_party/opencv/modules/photo/src/seamless_cloning.hpp"
    ]
    include_dirs = [
        "//third_party/opencv/modules/photo/include",
        "//third_party/opencv/modules/core/include",
        "//third_party/opencv/modules/imgproc/include",
        "//third_party/opencv/build",
        "//third_party/opencv/build/opencv2",
        "//third_party/opencv/build/modules/photo",
        "$target_out_dir",
    ]

    deps = [  
        "//third_party/opencv/modules/core:libopencv_core",
        "//third_party/opencv/modules/imgproc:libopencv_imgproc",
        "//third_party/opencv/3rdparty/carotene:libtegra_hal",
        ":ocv_cl2cpp_photo",
    ]
    configs = [ ":opencv_photo_config" ]

    sources += get_target_outputs(":ocv_cl2cpp_photo")
}

ohos_shared_library("libopencv_photo") {
    deps = [ ":opencv_photo_source" ]
    part_name = "opencv"
    subsystem_name = "thirdparty"
}

