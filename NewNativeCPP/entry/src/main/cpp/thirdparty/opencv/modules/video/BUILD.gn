# Copyright (c) 2022 Shenzhen Kaihong Digital Industry Development Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# opencv video build

import("//build/ohos.gni")
import("//third_party/opencv/opencv_common_cfg.gni")

config("opencv_video_config") {
    cflags_cc = opencv_lib_common_cflags_cc
    defines = opencv_lib_common_defines
}

action("ocv_cl2cpp_video") {
    script = "//third_party/opencv/build_cpp_from_cl.py"
    outputs = [
        "$target_out_dir/opencl_kernels_video.cpp",
        "$target_out_dir/opencl_kernels_video.hpp",
    ]
    cl_path = rebase_path("//third_party/opencv/modules/video/src/opencl")
    save_path = rebase_path("$target_out_dir")
    module_name = "video"
    args = [
        "--cl_path=$cl_path",
        "--save_path=$save_path",
        "--module_name=$module_name",
        "--target_cpu=$target_cpu",
    ]
    deps = ["//third_party/opencv/modules/core:libopencv_core",]
}


ohos_source_set("opencv_video_source") {
    sources = [
        "//third_party/opencv/modules/video/src/bgfg_KNN.cpp",
        "//third_party/opencv/modules/video/src/bgfg_gaussmix2.cpp",
        "//third_party/opencv/modules/video/src/camshift.cpp",
        "//third_party/opencv/modules/video/src/dis_flow.cpp",
        "//third_party/opencv/modules/video/src/ecc.cpp",
        "//third_party/opencv/modules/video/src/kalman.cpp",
        "//third_party/opencv/modules/video/src/lkpyramid.cpp",
        "//third_party/opencv/modules/video/src/optflowgf.cpp",
        "//third_party/opencv/modules/video/src/optical_flow_io.cpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_feature.cpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_feature_set.cpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_mil_model.cpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_mil_state.cpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_model.cpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_sampler.cpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_sampler_algorithm.cpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_state_estimator.cpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracking_feature.cpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracking_online_mil.cpp",
        "//third_party/opencv/modules/video/src/tracking/tracker.cpp",
        "//third_party/opencv/modules/video/src/tracking/tracker_dasiamrpn.cpp",
        "//third_party/opencv/modules/video/src/tracking/tracker_goturn.cpp",
        "//third_party/opencv/modules/video/src/tracking/tracker_mil.cpp",
        "//third_party/opencv/modules/video/src/variational_refinement.cpp",
        #"//third_party/opencv/build/modules/video/opencl_kernels_video.cpp",
        #"//third_party/opencv/build/modules/video/opencl_kernels_video.hpp",
        "//third_party/opencv/modules/video/src/lkpyramid.hpp",
        "//third_party/opencv/modules/video/src/precomp.hpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_feature_haar.impl.hpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_mil_model.hpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracker_mil_state.hpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracking_feature.hpp",
        "//third_party/opencv/modules/video/src/tracking/detail/tracking_online_mil.hpp"
    ]
    include_dirs = [
        "//third_party/opencv/modules/video/include",
        "//third_party/opencv/modules/flann/include",
        "//third_party/opencv/modules/core/include",
        "//third_party/opencv/modules/imgproc/include",
        "//third_party/opencv/modules/features2d/include",
        "//third_party/opencv/modules/calib3d/include",
        "//third_party/opencv/build",
        "//third_party/opencv/build/opencv2",
        "//third_party/opencv/build/modules/video",
        "//third_party/opencv/modules/dnn/include",
        "$target_out_dir",
    ]

    deps = [  
        "//third_party/opencv/modules/core:libopencv_core",
        "//third_party/opencv/modules/imgproc:libopencv_imgproc",
        "//third_party/opencv/modules/flann:libopencv_flann",
        "//third_party/opencv/modules/features2d:libopencv_features2d",
        "//third_party/opencv/modules/calib3d:libopencv_calib3d",
        "//third_party/opencv/modules/dnn:libopencv_dnn",
        "//third_party/opencv/3rdparty/carotene:libtegra_hal",
        ":ocv_cl2cpp_video"
    ]
    configs = [ ":opencv_video_config" ]

    sources += get_target_outputs(":ocv_cl2cpp_video")
}

ohos_shared_library("libopencv_video") {
    deps = [ ":opencv_video_source" ]
    part_name = "opencv"
    subsystem_name = "thirdparty"
}

